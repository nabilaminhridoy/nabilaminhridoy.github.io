'use client'

import { useState, useEffect } from 'react'
import { motion, useInView } from 'framer-motion'
import { Button } from '@/components/ui/button'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
import { Input } from '@/components/ui/input'
import { Textarea } from '@/components/ui/textarea'
import { Label } from '@/components/ui/label'
import { Badge } from '@/components/ui/badge'
import { toast } from 'sonner'
import { useRef } from 'react'
import { useTheme } from 'next-themes'

export default function Portfolio() {
  const [mounted, setMounted] = useState(false)
  const [isMenuOpen, setIsMenuOpen] = useState(false)
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    message: ''
  })
  const [isSubmitting, setIsSubmitting] = useState(false)
  const { theme, setTheme } = useTheme()

  useEffect(() => {
    setMounted(true)
  }, [])

  const scrollToSection = (sectionId: string) => {
    const element = document.getElementById(sectionId)
    element?.scrollIntoView({ behavior: 'smooth' })
    setIsMenuOpen(false)
  }

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target
    setFormData(prev => ({
      ...prev,
      [name]: value
    }))
  }

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    setIsSubmitting(true)

    try {
      const response = await fetch('/api/contact', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(formData),
      })

      const data = await response.json()

      if (response.ok) {
        toast.success(data.message)
        setFormData({ name: '', email: '', message: '' })
      } else {
        toast.error(data.error || 'Failed to send message')
      }
    } catch (error) {
      toast.error('An error occurred. Please try again.')
    } finally {
      setIsSubmitting(false)
    }
  }

  const skills = [
    { name: 'MongoDB', icon: 'üçÉ', level: 90 },
    { name: 'Express.js', icon: 'üöÇ', level: 85 },
    { name: 'React.js', icon: '‚öõÔ∏è', level: 90 },
    { name: 'Node.js', icon: 'üü¢', level: 85 },
    { name: 'TypeScript', icon: 'üìò', level: 80 },
    { name: 'REST APIs', icon: 'üîå', level: 88 },
    { name: 'GraphQL', icon: 'üìä', level: 75 },
    { name: 'Docker', icon: 'üê≥', level: 70 },
    { name: 'Git', icon: 'üì¶', level: 85 },
    { name: 'AWS', icon: '‚òÅÔ∏è', level: 65 }
  ]

  const projects = [
    {
      id: 1,
      title: 'E-Commerce Platform',
      description: 'Full-stack e-commerce solution with payment integration, admin dashboard, and real-time inventory management.',
      tech: ['React', 'Node.js', 'MongoDB', 'Stripe', 'Docker'],
      image: 'https://images.unsplash.com/photo-1556742049-0cfed4f6a45d?w=600&h=400&fit=crop',
      github: 'https://github.com',
      live: 'https://example.com'
    },
    {
      id: 2,
      title: 'Task Management Dashboard',
      description: 'Collaborative project management tool with real-time updates, team collaboration features, and analytics.',
      tech: ['React', 'Express', 'PostgreSQL', 'Socket.io', 'Chart.js'],
      image: 'https://images.unsplash.com/photo-1460925895917-afdab827c52f?w=600&h=400&fit=crop',
      github: 'https://github.com',
      live: 'https://example.com'
    },
    {
      id: 3,
      title: 'Real-Time Chat Application',
      description: 'Scalable chat application with end-to-end encryption, file sharing, and video calling capabilities.',
      tech: ['React', 'Node.js', 'WebRTC', 'Socket.io', 'Redis'],
      image: 'https://images.unsplash.com/photo-1611224923853-80b023f02d71?w=600&h=400&fit=crop',
      github: 'https://github.com',
      live: 'https://example.com'
    },
    {
      id: 4,
      title: 'Content Management System',
      description: 'Flexible CMS with dynamic content creation, user roles, and SEO optimization features.',
      tech: ['Next.js', 'TypeScript', 'Prisma', 'PostgreSQL', 'AWS'],
      image: 'https://images.unsplash.com/photo-1542831371-29b0f74f9713?w=600&h=400&fit=crop',
      github: 'https://github.com',
      live: 'https://example.com'
    },
    {
      id: 5,
      title: 'Analytics Dashboard',
      description: 'Business intelligence dashboard with real-time data visualization, reporting, and predictive analytics.',
      tech: ['React', 'D3.js', 'Python', 'FastAPI', 'MongoDB'],
      image: 'https://images.unsplash.com/photo-1551288049-bebda4e38f71?w=600&h=400&fit=crop',
      github: 'https://github.com',
      live: 'https://example.com'
    },
    {
      id: 6,
      title: 'Social Media Platform',
      description: 'Full-featured social network with real-time feeds, messaging, and content sharing capabilities.',
      tech: ['React', 'Node.js', 'GraphQL', 'AWS', 'Redis'],
      image: 'https://images.unsplash.com/photo-1611974789855-9c2a0a7236a3?w=600&h=400&fit=crop',
      github: 'https://github.com',
      live: 'https://example.com'
    }
  ]

  const experiences = [
    {
      type: 'work',
      title: 'Senior Full Stack Developer',
      company: 'Tech Solutions Inc.',
      period: '2022 - Present',
      description: 'Lead development of scalable web applications using MERN stack. Mentored junior developers and implemented best practices.'
    },
    {
      type: 'work',
      title: 'Full Stack Developer',
      company: 'Digital Agency Pro',
      period: '2020 - 2022',
      description: 'Developed and maintained multiple client projects. Implemented RESTful APIs and responsive front-end applications.'
    },
    {
      type: 'education',
      title: 'Bachelor of Science in Computer Science',
      company: 'University of Technology',
      period: '2016 - 2020',
      description: 'Graduated with honors. Specialized in Software Engineering and Web Development.'
    }
  ]

  const testimonials = [
    {
      id: 1,
      name: 'Sarah Johnson',
      position: 'CEO, TechStart',
      content: 'Nabil is an exceptional developer who delivered our e-commerce platform on time and exceeded our expectations. His technical skills and attention to detail are outstanding.',
      rating: 5
    },
    {
      id: 2,
      name: 'Michael Chen',
      position: 'Product Manager, InnovateCo',
      content: 'Working with Nabil was a game-changer for our project. He quickly understood our requirements and implemented robust solutions that scaled perfectly.',
      rating: 5
    },
    {
      id: 3,
      name: 'Emily Rodriguez',
      position: 'CTO, DataFlow',
      content: 'Nabil\'s expertise in full-stack development helped us launch our product 3 months ahead of schedule. Highly recommend for any complex project.',
      rating: 5
    }
  ]

  const socialLinks = [
    { name: 'GitHub', url: 'https://github.com' },
    { name: 'LinkedIn', url: 'https://linkedin.com' },
    { name: 'Twitter', url: 'https://twitter.com' },
    { name: 'Facebook', url: 'https://facebook.com' }
  ]

  // Animation variants
  const fadeInUp = {
    initial: { opacity: 0, y: 30 },
    animate: { opacity: 1, y: 0 },
    transition: { duration: 0.6 }
  }

  const staggerContainer = {
    animate: {
      transition: {
        staggerChildren: 0.1
      }
    }
  }

  const scaleIn = {
    initial: { opacity: 0, scale: 0.9 },
    animate: { opacity: 1, scale: 1 },
    transition: { duration: 0.5 }
  }

  if (!mounted) return null

  const AnimatedSection = ({ children, id, className = '' }: { 
    children: React.ReactNode
    id: string
    className?: string 
  }) => {
    const ref = useRef(null)
    const isInView = useInView(ref, { once: true, margin: "-100px" })

    return (
      <motion.section
        ref={ref}
        id={id}
        className={`py-20 ${className}`}
        initial="initial"
        animate={isInView ? "animate" : "initial"}
        variants={fadeInUp}
      >
        {children}
      </motion.section>
    )
  }

  return (
    <div className="min-h-screen bg-background text-foreground">
      {/* Navigation */}
      <nav className="fixed top-0 w-full bg-background/80 backdrop-blur-md z-50 border-b">
        <div className="container mx-auto px-4 py-4">
          <div className="flex justify-between items-center">
            <div className="text-2xl font-bold">NH</div>
            
            {/* Desktop Navigation */}
            <div className="hidden md:flex space-x-8">
              {['home', 'about', 'projects', 'experience', 'testimonials', 'contact'].map((section) => (
                <button
                  key={section}
                  onClick={() => scrollToSection(section)}
                  className="capitalize hover:text-primary transition-colors"
                >
                  {section}
                </button>
              ))}
            </div>

            <div className="flex items-center space-x-4">
              <Button
                variant="ghost"
                size="icon"
                onClick={() => setTheme(theme === 'dark' ? 'light' : 'dark')}
              >
                {theme === 'dark' ? '‚òÄÔ∏è' : 'üåô'}
              </Button>

              {/* Mobile Menu Toggle */}
              <Button
                variant="ghost"
                size="icon"
                className="md:hidden"
                onClick={() => setIsMenuOpen(!isMenuOpen)}
              >
                {isMenuOpen ? '‚úï' : '‚ò∞'}
              </Button>
            </div>
          </div>

          {/* Mobile Navigation */}
          {isMenuOpen && (
            <div className="md:hidden mt-4 space-y-2">
              {['home', 'about', 'projects', 'experience', 'testimonials', 'contact'].map((section) => (
                <button
                  key={section}
                  onClick={() => scrollToSection(section)}
                  className="block w-full text-left capitalize py-2 hover:text-primary transition-colors"
                >
                  {section}
                </button>
              ))}
            </div>
          )}
        </div>
      </nav>

      {/* Hero Section */}
      <AnimatedSection id="home" className="min-h-screen flex items-center justify-center pt-16">
        <div className="container mx-auto px-4 py-20 text-center">
          <motion.div 
            className="max-w-4xl mx-auto"
            initial="initial"
            animate="animate"
            variants={staggerContainer}
          >
            <motion.h1 
              className="text-4xl md:text-6xl font-bold mb-6 bg-gradient-to-r from-primary to-primary/60 bg-clip-text text-transparent"
              variants={fadeInUp}
            >
              Hi, I'm Nabil Amin Hridoy
            </motion.h1>
            <motion.h2 
              className="text-2xl md:text-3xl mb-4 text-muted-foreground"
              variants={fadeInUp}
            >
              MERN Stack & Full Stack Developer
            </motion.h2>
            <motion.p 
              className="text-lg md:text-xl mb-8 text-muted-foreground max-w-2xl mx-auto"
              variants={fadeInUp}
            >
              Building scalable, user-friendly, and high-performance web applications with modern technologies and best practices.
            </motion.p>
            <motion.div 
              className="flex flex-col sm:flex-row gap-4 justify-center"
              variants={fadeInUp}
            >
              <Button size="lg" onClick={() => scrollToSection('contact')} className="text-lg px-8">
                Hire Me ‚Üí
              </Button>
              <Button variant="outline" size="lg" onClick={() => scrollToSection('projects')} className="text-lg px-8">
                View Projects
              </Button>
            </motion.div>
          </motion.div>
        </div>
      </AnimatedSection>

      {/* About Section */}
      <section id="about" className="py-20 bg-muted/50">
        <div className="container mx-auto px-4">
          <h2 className="text-3xl md:text-4xl font-bold text-center mb-12">About Me</h2>
          <div className="grid md:grid-cols-2 gap-12 max-w-6xl mx-auto">
            <div className="flex flex-col items-center justify-center">
              <div className="w-64 h-64 rounded-full overflow-hidden mb-6 border-4 border-primary">
                <img 
                  src="/avatar.jpg"
                  alt="Nabil Amin Hridoy"
                  className="w-full h-full object-cover"
                />
              </div>
              <div className="flex space-x-4">
                {socialLinks.map((social) => (
                  <Button key={social.name} variant="ghost" size="sm" asChild>
                    <a href={social.url} target="_blank" rel="noopener noreferrer">
                      {social.name}
                    </a>
                  </Button>
                ))}
              </div>
            </div>
            
            <div className="space-y-6">
              <div>
                <h3 className="text-2xl font-semibold mb-4">Passionate Full Stack Developer</h3>
                <p className="text-muted-foreground leading-relaxed">
                  With over 4 years of experience in web development, I specialize in creating robust, scalable applications using the MERN stack. I'm passionate about clean code, optimal performance, and exceptional user experiences.
                </p>
              </div>
              
              <div>
                <h4 className="text-xl font-semibold mb-4">Key Skills</h4>
                <div className="grid grid-cols-2 gap-4">
                  {skills.map((skill) => (
                    <div key={skill.name} className="space-y-2">
                      <div className="flex justify-between items-center">
                        <span className="flex items-center gap-2">
                          <span>{skill.icon}</span>
                          <span className="text-sm font-medium">{skill.name}</span>
                        </span>
                        <span className="text-sm text-muted-foreground">{skill.level}%</span>
                      </div>
                      <div className="w-full bg-secondary rounded-full h-2">
                        <div 
                          className="bg-primary h-2 rounded-full transition-all duration-1000 ease-out"
                          style={{ width: `${skill.level}%` }}
                        />
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Projects Section */}
      <AnimatedSection id="projects">
        <div className="container mx-auto px-4">
          <motion.h2 
            className="text-3xl md:text-4xl font-bold text-center mb-12"
            variants={fadeInUp}
          >
            Featured Projects
          </motion.h2>
          <motion.div 
            className="grid md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-6xl mx-auto"
            variants={staggerContainer}
            initial="initial"
            animate="animate"
          >
            {projects.map((project, index) => (
              <motion.div key={project.id} variants={scaleIn}>
                <Card className="overflow-hidden hover:shadow-lg transition-shadow">
                  <div className="aspect-video overflow-hidden">
                    <img 
                      src={project.image} 
                      alt={project.title}
                      className="w-full h-full object-cover hover:scale-105 transition-transform duration-300"
                    />
                  </div>
                  <CardHeader>
                    <CardTitle>{project.title}</CardTitle>
                    <CardDescription>{project.description}</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="flex flex-wrap gap-2 mb-4">
                      {project.tech.map((tech) => (
                        <Badge key={tech} variant="secondary">{tech}</Badge>
                      ))}
                    </div>
                    <div className="flex space-x-4">
                      <Button variant="outline" size="sm" asChild>
                        <a href={project.github} target="_blank" rel="noopener noreferrer">
                          Code
                        </a>
                      </Button>
                      <Button size="sm" asChild>
                        <a href={project.live} target="_blank" rel="noopener noreferrer">
                          Live Demo
                        </a>
                      </Button>
                    </div>
                  </CardContent>
                </Card>
              </motion.div>
            ))}
          </motion.div>
        </div>
      </AnimatedSection>

      {/* Experience & Education Section */}
      <section id="experience" className="py-20 bg-muted/50">
        <div className="container mx-auto px-4">
          <h2 className="text-3xl md:text-4xl font-bold text-center mb-12">Experience & Education</h2>
          <div className="max-w-4xl mx-auto">
            <div className="relative">
              <div className="absolute left-8 top-0 bottom-0 w-0.5 bg-primary/20"></div>
              {experiences.map((exp, index) => (
                <div key={index} className="relative flex items-start mb-8">
                  <div className="absolute left-6 w-4 h-4 bg-primary rounded-full border-4 border-background"></div>
                  <div className="ml-16 flex-1">
                    <Card>
                      <CardHeader>
                        <div className="flex items-start justify-between">
                          <div className="flex items-center gap-2">
                            <span className="text-lg">
                              {exp.type === 'work' ? 'üíº' : 'üéì'}
                            </span>
                            <CardTitle className="text-lg">{exp.title}</CardTitle>
                          </div>
                          <Badge variant="outline" className="flex items-center gap-1">
                            üìÖ {exp.period}
                          </Badge>
                        </div>
                        <CardDescription className="text-primary font-medium">
                          {exp.company}
                        </CardDescription>
                      </CardHeader>
                      <CardContent>
                        <p className="text-muted-foreground">{exp.description}</p>
                      </CardContent>
                    </Card>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </section>

      {/* Testimonials Section */}
      <AnimatedSection id="testimonials">
        <div className="container mx-auto px-4">
          <motion.h2 
            className="text-3xl md:text-4xl font-bold text-center mb-12"
            variants={fadeInUp}
          >
            Client Testimonials
          </motion.h2>
          <motion.div 
            className="grid md:grid-cols-3 gap-8 max-w-6xl mx-auto"
            variants={staggerContainer}
            initial="initial"
            animate="animate"
          >
            {testimonials.map((testimonial) => (
              <motion.div key={testimonial.id} variants={scaleIn}>
                <Card className="text-center">
                  <CardHeader>
                    <div className="flex justify-center mb-4">
                      {[...Array(testimonial.rating)].map((_, i) => (
                        <span key={i} className="text-yellow-400 text-xl">‚≠ê</span>
                      ))}
                    </div>
                    <CardTitle className="text-lg">{testimonial.name}</CardTitle>
                    <CardDescription>{testimonial.position}</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <p className="text-muted-foreground italic">"{testimonial.content}"</p>
                  </CardContent>
                </Card>
              </motion.div>
            ))}
          </motion.div>
        </div>
      </AnimatedSection>

      {/* Contact Section */}
      <AnimatedSection id="contact" className="bg-muted/50">
        <div className="container mx-auto px-4">
          <motion.h2 
            className="text-3xl md:text-4xl font-bold text-center mb-12"
            variants={fadeInUp}
          >
            Get In Touch
          </motion.h2>
          <motion.div 
            className="max-w-4xl mx-auto grid md:grid-cols-2 gap-12"
            variants={staggerContainer}
            initial="initial"
            animate="animate"
          >
            <motion.div className="space-y-6" variants={fadeInUp}>
              <div>
                <h3 className="text-2xl font-semibold mb-4">Let's Work Together</h3>
                <p className="text-muted-foreground mb-6">
                  I'm always interested in hearing about new projects and opportunities. Whether you have a question or just want to say hi, feel free to reach out!
                </p>
              </div>
              
              <div className="space-y-4">
                <div className="flex items-center gap-3">
                  <span className="text-primary">üìß</span>
                  <span>nabil.hridoy@example.com</span>
                </div>
                <div className="flex items-center gap-3">
                  <span className="text-primary">üì±</span>
                  <span>+880 123 456 7890</span>
                </div>
                <div className="flex items-center gap-3">
                  <span className="text-primary">üìç</span>
                  <span>Dhaka, Bangladesh</span>
                </div>
              </div>

              <div>
                <h4 className="font-semibold mb-3">Follow Me</h4>
                <div className="flex space-x-3">
                  {socialLinks.map((social) => (
                    <Button key={social.name} variant="outline" size="sm" asChild>
                      <a href={social.url} target="_blank" rel="noopener noreferrer">
                        {social.name}
                      </a>
                    </Button>
                  ))}
                </div>
              </div>
            </motion.div>

            <motion.div variants={scaleIn}>
              <Card>
                <CardHeader>
                  <CardTitle>Send Message</CardTitle>
                  <CardDescription>Fill out the form below and I'll get back to you as soon as possible.</CardDescription>
                </CardHeader>
                <CardContent>
                  <form className="space-y-4" onSubmit={handleSubmit}>
                    <div>
                      <Label htmlFor="name">Name</Label>
                      <Input 
                        id="name" 
                        name="name"
                        value={formData.name}
                        onChange={handleInputChange}
                        placeholder="Your Name" 
                        required 
                      />
                    </div>
                    <div>
                      <Label htmlFor="email">Email</Label>
                      <Input 
                        id="email" 
                        name="email"
                        type="email" 
                        value={formData.email}
                        onChange={handleInputChange}
                        placeholder="your@email.com" 
                        required 
                      />
                    </div>
                    <div>
                      <Label htmlFor="message">Message</Label>
                      <Textarea 
                        id="message" 
                        name="message"
                        value={formData.message}
                        onChange={handleInputChange}
                        placeholder="Your message here..." 
                        rows={4} 
                        required 
                      />
                    </div>
                    <Button type="submit" className="w-full" disabled={isSubmitting}>
                      {isSubmitting ? 'Sending...' : 'Send Message'}
                    </Button>
                  </form>
                </CardContent>
              </Card>
            </motion.div>
          </motion.div>
        </div>
      </AnimatedSection>

      {/* Footer */}
      <footer className="bg-background border-t">
        <div className="container mx-auto px-4 py-8">
          <div className="flex flex-col md:flex-row justify-between items-center">
            <div className="mb-4 md:mb-0">
              <p className="text-muted-foreground">
                ¬© 2024 Nabil Amin Hridoy. All rights reserved.
              </p>
            </div>
            <div className="flex space-x-6">
              {['home', 'about', 'projects', 'experience', 'testimonials', 'contact'].map((section) => (
                <button
                  key={section}
                  onClick={() => scrollToSection(section)}
                  className="capitalize text-muted-foreground hover:text-primary transition-colors"
                >
                  {section}
                </button>
              ))}
            </div>
          </div>
        </div>
      </footer>
    </div>
  )
}